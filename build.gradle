plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id "io.freefair.lombok" version "8.7.1"
    id "com.google.cloud.artifactregistry.gradle-plugin" version "2.2.1"
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'application'
}

application {
    mainClass = 'com.java_services.algorithmservices.AlgorithmServicesApplication' // Use 'mainClass' instead of deprecated 'mainClassName'
}

group = 'com.java_services'
version = '1.0.1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven {
        url "artifactregistry://us-central1-maven.pkg.dev/ciye-dev2x/algo-c-code"
    }
    mavenCentral()
}

dependencies {
    implementation 'com.all:algorithm-services:CAlgo-8.0.1-master'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.3'
    compileOnly 'org.projectlombok:lombok:1.18.28'
    developmentOnly 'org.springframework.boot:spring-boot-devtools:3.1.3'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.0'
}

task buildDockerImage(type: Exec) {
    commandLine 'docker', 'buildx', 'build', '--platform', 'linux/amd64', '-t', "${project.name}:${version}", '.'
}

task runDockerContainer(type: Exec) {
    dependsOn buildDockerImage
    commandLine 'docker', 'run', '--platform', 'linux/amd64', '-p', '8080:8080', "${project.name}:${version}"
}

task deployCloudRun {
    dependsOn buildDockerImage

    def imageName = "us-central1-docker.pkg.dev/ciye-dev2x/algorithm-java-service/${project.name}:${version}"

    doLast {
        // Tag Docker image for Artifact Registry
        exec {
            commandLine 'docker', 'tag', "${project.name}:${version}", imageName
        }

        // Push Docker image to Artifact Registry
        exec {
            commandLine 'docker', 'push', imageName
        }

        // Deploy to Google Cloud Run
        exec {
            commandLine 'gcloud', 'run', 'deploy', project.name,
                    '--image', imageName,
                    '--platform', 'managed',
                    '--region', 'us-central1',
                    '--allow-unauthenticated'
        }
    }
}


shadowJar {
    archiveClassifier.set('shadow')
    mergeServiceFiles() // Optional: Merge service descriptor files, if necessary
}

